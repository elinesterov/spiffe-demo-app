apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-app
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spiffe-demo-app
  template:
    metadata:
      labels:
        app: spiffe-demo-app
    spec:
      containers:
      - name: spiffe-demo-app
        image: {{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
          - name: SPIFFE_ENDPOINT_SOCKET
            value: "unix://{{ .Values.app.spiffeSocketMountPathDir }}/{{ .Values.app.spiffeSocketName }}"
        ports:
        - containerPort: 8080
      {{- if .Values.app.spiffeCSIDriverVolume }}
        volumeMounts:
        - name: spiffe-csi-driver-volume
          mountPath: {{ .Values.app.spiffeSocketMountPathDir }}
      {{- end }}
      {{- if .Values.app.enableBusybox }}
      - name: busybox
        image: busybox
        command: ['sleep', '3600']
        env:
          - name: SPIFFE_ENDPOINT_SOCKET
            value: "unix://{{ .Values.app.spiffeSocketMountPathDir }}/{{ .Values.app.spiffeSocketName }}"
        imagePullPolicy: IfNotPresent
        {{- if .Values.app.spiffeCSIDriverVolume }}
        volumeMounts:
          - name: spiffe-csi-driver-volume
            mountPath: {{ .Values.app.spiffeSocketMountPathDir }}
            readOnly: true
        {{- end }}
      {{- end }}
      {{- if .Values.app.spiffeCSIDriverVolume }}
      volumes:
      - name: spiffe-csi-driver-volume
        csi:
          driver: "csi.spiffe.io"
          readOnly: true
      {{- end }}